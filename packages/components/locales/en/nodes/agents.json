{
    "conversationalAgent": {
        "label": "Conversational Agent",
        "description": "A conversational agent that can use tools and maintain conversation history",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "reactAgent": {
        "label": "ReAct Agent",
        "description": "A ReAct (Reasoning and Acting) agent that can reason about problems and take actions",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "planAndExecuteAgent": {
        "label": "Plan and Execute Agent",
        "description": "An agent that plans a sequence of actions and then executes them",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "toolCallingAgent": {
        "label": "Tool Calling Agent",
        "description": "An agent that can call tools based on function definitions",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "openAIFunctionsAgent": {
        "label": "OpenAI Functions Agent",
        "description": "An agent that uses OpenAI's function calling capabilities",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "xmlAgent": {
        "label": "XML Agent",
        "description": "An agent that uses XML-based reasoning and tool calling",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "autoGPT": {
        "label": "AutoGPT Agent",
        "description": "An autonomous agent that can set and achieve goals independently",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "goal": {
                "label": "Goal",
                "description": "The goal the agent should achieve"
            },
            "maxIterations": {
                "label": "Max Iterations",
                "description": "Maximum number of iterations the agent can perform"
            }
        }
    },
    "babyAGI": {
        "label": "BabyAGI Agent",
        "description": "A simplified version of AGI that can perform tasks autonomously",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "objective": {
                "label": "Objective",
                "description": "The objective the agent should work towards"
            },
            "maxIterations": {
                "label": "Max Iterations",
                "description": "Maximum number of iterations the agent can perform"
            }
        }
    },
    "conversationalRetrievalAgent": {
        "label": "Conversational Retrieval Agent",
        "description": "An agent that can retrieve information and have conversations about it",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "retriever": {
                "label": "Retriever",
                "description": "Retriever to use for information retrieval"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "multiAgentExecutor": {
        "label": "Multi-Agent Executor",
        "description": "An executor that can coordinate multiple agents to work together",
        "category": "Agents",
        "inputs": {
            "agents": {
                "label": "Agents",
                "description": "List of agents to coordinate"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the executor's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the executor"
            }
        }
    },
    "selfAskWithSearchAgent": {
        "label": "Self-Ask with Search Agent",
        "description": "An agent that can ask itself questions and search for answers",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "searchTool": {
                "label": "Search Tool",
                "description": "Search tool for finding information"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "zeroShotAgent": {
        "label": "Zero-Shot Agent",
        "description": "An agent that can perform tasks without prior training examples",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    },
    "createReactAgent": {
        "label": "Create React Agent",
        "description": "A ReAct agent created using the create_react_agent function",
        "category": "Agents",
        "inputs": {
            "llm": {
                "label": "LLM",
                "description": "Language model to use for the agent"
            },
            "tools": {
                "label": "Tools",
                "description": "Tools available to the agent"
            },
            "memory": {
                "label": "Memory",
                "description": "Memory component for conversation history"
            },
            "systemMessage": {
                "label": "System Message",
                "description": "System message to set the agent's behavior"
            },
            "humanMessage": {
                "label": "Human Message",
                "description": "Human message to the agent"
            }
        }
    }
}
